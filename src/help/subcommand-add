Usage: DesktopFile-Creator add [OPTIONS] [COMMANDS] [ARGS...]

Create a new .desktop file from AppImage, Command, Executable file or Script.

Options:

Short options:
  -c, --stdout		                Write to standard output and don't delete input files.
  -b, --base64       (String)
  -q, --quiet		                Suppress the pull output.
  -h, --help                        Show this help message.
  -T, --type         (String)       This specification defines 3 types of desktop entries: Application (type 1), Link (type 2) and Directory (type 3).
  -V, --version      (String)	    Version of the Desktop Entry Specification that the desktop entry conforms with. Entries that confirm with this version of the specification should use 1.0. Note that the version field is not required to be present.
  -N, --name         (String)       Specific name of the application, for example "Mozilla".
  -g, --genericname  (String)       Generic name of the application, for example "Web Browser".
  -C, --comment      (String)       Tooltip for the entry, for example "View sites on the Internet". The value should not be redundant with the values of Name and GenericName.
  -I, --icon         (String)       Icon to display in file manager, menus, etc. If the name is an absolute path, the given file will be used. If the name is not an absolute path, the algorithm described in the Icon Theme Specification will be used to locate the icon.
  -H, --hidden       (bool)         Hidden should have been called Deleted. It means the user deleted (at his level) something that was present (at an upper level, e.g. in the system dirs). It's strictly equivalent to the .desktop file not existing at all, as far as that user is concerned. This can also be used to "uninstall" existing files.
  -R, --tryexec      (String)       Path to an executable file on disk used to determine if the program is actually installed. If the path is not an absolute path, the file is looked up in the $PATH environment variable. If the file is not present or if it is not executable, the entry may be ignored.
  -E, --exec         (String)       Program to execute, possibly with arguments. See the Exec key for details on how this key works. The Exec key is required if DBusActivatable is not set to true. Even if DBusActivatable is true, Exec should be specified for compatibility with implementations that do not understand DBusActivatable.
  -P, --path         (String)       If entry is of type Application, the working directory to run the program in.
  -A, --actions      (Vec<String>)  Identifiers for application actions. This can be used to tell the application to make a specific action, different from the default behavior.
  -M, --mimetype     (Vec<String>)  The MIME type(s) supported by this application.
  -G, --categories   (Vec<String>)  Categories in which the entry should be shown in a menu
  -K, --keywords     (String)       A list of strings which may be used in addition to other metadata to describe this entry. This can be useful e.g. to facilitate searching through entries. The values are not meant for display, and should not be redundant with the values of Name or GenericName.
  -U, --url          (String)       If entry is Link type, the URL to access.

Long options:
  --nodisplay        (bool)         NoDisplay means "this application exists, but don't display it in the menus". This can be useful to e.g. associate this application with MIME types, so that it gets launched from a file manager (or other apps), without having a menu entry for it.
  --onlyshowin       (Vec<String>)  A list of strings identifying the environments that should display a given desktop entry. May appear in a group.
  --notshowin        (Vec<String>)  A list of strings identifying the environments that should nodisplay a given desktop entry. May appear in a group.
  --dbusactivatable  (bool)         A boolean value specifying if D-Bus activation is supported for this application. If this key is missing, the default value is false. If the value is true then implementations should ignore the Exec key and send a D-Bus message to launch the application.
  --terminal         (bool)         Whether the program runs in a terminal window.
  --startupnotify    (bool)         If true, it is KNOWN that the application will send a "remove" message when started with the DESKTOP_STARTUP_ID environment variable set. If false, it is KNOWN that the application does not work with startup notification at all (does not shown any window, breaks even when using StartupWMClass, etc.). If absent, a reasonable handling is up to implementations (assuming false, using StartupWMClass, etc.)
  --startupwmclass   (String)       If specified, it is known that the application will map at least one window with the given string as its WM class or WM name hint.